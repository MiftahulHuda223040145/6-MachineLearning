# -*- coding: utf-8 -*-
"""Statistik Deskriptif - Machine Learning - 223040145

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dyOJlImDUYD-oQUmgyas3vpICIrqmoeK

# **A**

Tuple
"""

import numpy as np

# Data dalam bentuk tuple
data_tuple = (7, 5, 8, 6, 9, 7, 10)

# Menghitung statistik
mean_value = np.mean(data_tuple)       # Rata-rata
std_dev = np.std(data_tuple, ddof=1)   # Standar deviasi
median_value = np.median(data_tuple)   # Median
q1 = np.percentile(data_tuple, 25)     # Kuartil 1 (Q1)
q3 = np.percentile(data_tuple, 75)     # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"Tuple - Mean    : {mean_value}")
print(f"Tuple - Std Dev : {std_dev}")
print(f"Tuple - Median  : {median_value}")
print(f"Tuple - Q1      : {q1}")
print(f"Tuple - Q3      : {q3}")

"""Numphys Array"""

# Data dalam bentuk NumPy Array
data_numpy = np.array([7, 5, 8, 6, 9, 7, 10])

# Menghitung statistik
mean_value = np.mean(data_numpy)
std_dev = np.std(data_numpy, ddof=1)
median_value = np.median(data_numpy)
q1 = np.percentile(data_numpy, 25)
q3 = np.percentile(data_numpy, 75)

# Menampilkan hasil
print(f"NumPy - Mean    : {mean_value}")
print(f"NumPy - Std Dev : {std_dev}")
print(f"NumPy - Median  : {median_value}")
print(f"NumPy - Q1      : {q1}")
print(f"NumPy - Q3      : {q3}")

"""List"""

import statistics

# Data dalam bentuk List
data_list = [7, 5, 8, 6, 9, 7, 10]

# Menghitung statistik
mean_value = statistics.mean(data_list)
std_dev = statistics.stdev(data_list)
median_value = statistics.median(data_list)
q1 = statistics.median(sorted(data_list)[:len(data_list)//2])  # Q1
q3 = statistics.median(sorted(data_list)[len(data_list)//2:])  # Q3

# Menampilkan hasil
print(f"List - Mean    : {mean_value}")
print(f"List - Std Dev : {std_dev}")
print(f"List - Median  : {median_value}")
print(f"List - Q1      : {q1}")
print(f"List - Q3      : {q3}")

"""Dataframe Source Code"""

import pandas as pd

# Membuat DataFrame
df = pd.DataFrame({'Nilai': [7, 5, 8, 6, 9, 7, 10]})

# Menghitung statistik
mean_value = df['Nilai'].mean()
std_dev = df['Nilai'].std()
median_value = df['Nilai'].median()
q1 = df['Nilai'].quantile(0.25)
q3 = df['Nilai'].quantile(0.75)

# Menampilkan hasil
print(f"DataFrame (Source Code) - Mean    : {mean_value}")
print(f"DataFrame (Source Code) - Std Dev : {std_dev}")
print(f"DataFrame (Source Code) - Median  : {median_value}")
print(f"DataFrame (Source Code) - Q1      : {q1}")
print(f"DataFrame (Source Code) - Q3      : {q3}")

"""Dataframe File"""

import pandas as pd

# Buat DataFrame dengan data
df = pd.DataFrame({'nilai': [7, 5, 8, 6, 9, 7, 10]})

# Simpan ke dalam file CSV
file_path = "/content/data_nilai.csv"
df.to_csv(file_path, index=False)

print(f"File telah disimpan di {file_path}")

# Baca data dari file CSV
df_baca = pd.read_csv("/content/data_nilai.csv")

# Menghitung statistik deskriptif
mean_value = df_baca['nilai'].mean()      # Rata-rata
std_dev = df_baca['nilai'].std()          # Standar deviasi
median_value = df_baca['nilai'].median()  # Median
q1 = df_baca['nilai'].quantile(0.25)      # Kuartil 1 (Q1)
q3 = df_baca['nilai'].quantile(0.75)      # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"Rata-rata (Mean)    : {mean_value}")
print(f"Standar Deviasi     : {std_dev}")
print(f"Median              : {median_value}")
print(f"Kuartil 1 (Q1)      : {q1}")
print(f"Kuartil 3 (Q3)      : {q3}")

"""# **B**

Tuple
"""

import numpy as np

# Data dalam bentuk tuple
data_tuple = (7, 8, 6, 9, 7, 10)

# Menghitung statistik
mean_value = np.mean(data_tuple)       # Rata-rata
std_dev = np.std(data_tuple, ddof=1)   # Standar deviasi sampel
median_value = np.median(data_tuple)   # Median
q1 = np.percentile(data_tuple, 25)     # Kuartil 1 (Q1)
q3 = np.percentile(data_tuple, 75)     # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"Tuple - Mean    : {mean_value}")
print(f"Tuple - Std Dev : {std_dev}")
print(f"Tuple - Median  : {median_value}")
print(f"Tuple - Q1      : {q1}")
print(f"Tuple - Q3      : {q3}")

"""Numphys Array"""

# Data dalam bentuk NumPy Array
data_numpy = np.array([7, 8, 6, 9, 7, 10])

# Menghitung statistik
mean_value = np.mean(data_numpy)
std_dev = np.std(data_numpy, ddof=1)
median_value = np.median(data_numpy)
q1 = np.percentile(data_numpy, 25)
q3 = np.percentile(data_numpy, 75)

# Menampilkan hasil
print(f"NumPy - Mean    : {mean_value}")
print(f"NumPy - Std Dev : {std_dev}")
print(f"NumPy - Median  : {median_value}")
print(f"NumPy - Q1      : {q1}")
print(f"NumPy - Q3      : {q3}")

"""List"""

import statistics

# Data dalam bentuk List
data_list = [7, 8, 6, 9, 7, 10]

# Menghitung statistik
mean_value = statistics.mean(data_list)
std_dev = statistics.stdev(data_list)
median_value = statistics.median(data_list)
q1 = statistics.median(sorted(data_list)[:len(data_list)//2])  # Q1
q3 = statistics.median(sorted(data_list)[len(data_list)//2:])  # Q3

# Menampilkan hasil
print(f"List - Mean    : {mean_value}")
print(f"List - Std Dev : {std_dev}")
print(f"List - Median  : {median_value}")
print(f"List - Q1      : {q1}")
print(f"List - Q3      : {q3}")

"""Dataframe Source Code"""

import pandas as pd

# Membuat DataFrame
df = pd.DataFrame({'Nilai': [7, 8, 6, 9, 7, 10]})

# Menghitung statistik
mean_value = df['Nilai'].mean()
std_dev = df['Nilai'].std()
median_value = df['Nilai'].median()
q1 = df['Nilai'].quantile(0.25)
q3 = df['Nilai'].quantile(0.75)

# Menampilkan hasil
print(f"DataFrame (Source Code) - Mean    : {mean_value}")
print(f"DataFrame (Source Code) - Std Dev : {std_dev}")
print(f"DataFrame (Source Code) - Median  : {median_value}")
print(f"DataFrame (Source Code) - Q1      : {q1}")
print(f"DataFrame (Source Code) - Q3      : {q3}")

"""Dataframe File"""

import pandas as pd

# Buat DataFrame dengan data
df = pd.DataFrame({'nilai': [7, 8, 6, 9, 7, 10]})

# Simpan ke dalam file CSV
file_path = "/content/data_nilai.csv"
df.to_csv(file_path, index=False)

print(f"File telah disimpan di {file_path}")

# Baca data dari file CSV
df_baca = pd.read_csv("/content/data_nilai.csv")

# Menghitung statistik deskriptif
mean_value = df_baca['nilai'].mean()      # Rata-rata
std_dev = df_baca['nilai'].std()          # Standar deviasi
median_value = df_baca['nilai'].median()  # Median
q1 = df_baca['nilai'].quantile(0.25)      # Kuartil 1 (Q1)
q3 = df_baca['nilai'].quantile(0.75)      # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"Rata-rata (Mean)    : {mean_value}")
print(f"Standar Deviasi     : {std_dev}")
print(f"Median              : {median_value}")
print(f"Kuartil 1 (Q1)      : {q1}")
print(f"Kuartil 3 (Q3)      : {q3}")

"""# **Nilai dan Frekuensi**

Tuple
"""

import numpy as np

# Data dalam bentuk tuple (sesuai frekuensi)
data = (3, 3, 6, 6, 6, 7, 9, 9, 9, 9)

# Menghitung statistik
mean_value = np.mean(data)       # Rata-rata
std_dev = np.std(data, ddof=1)   # Standar deviasi (ddof=1 untuk sampel)
median_value = np.median(data)   # Median
q1 = np.percentile(data, 25)     # Kuartil 1 (Q1)
q3 = np.percentile(data, 75)     # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"Tuple - Rata-rata (Mean)    : {mean_value}")
print(f"Tuple - Standar Deviasi     : {std_dev}")
print(f"Tuple - Median              : {median_value}")
print(f"Tuple - Kuartil 1 (Q1)      : {q1}")
print(f"Tuple - Kuartil 3 (Q3)      : {q3}")

"""Numphys Array"""

import numpy as np

# Data dalam bentuk NumPy array (sesuai frekuensi)
data = np.array([3, 3, 6, 6, 6, 7, 9, 9, 9, 9])

# Menghitung statistik
mean_value = np.mean(data)       # Rata-rata
std_dev = np.std(data, ddof=1)   # Standar deviasi (ddof=1 untuk sampel)
median_value = np.median(data)   # Median
q1 = np.percentile(data, 25)     # Kuartil 1 (Q1)
q3 = np.percentile(data, 75)     # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"NumPy Array - Rata-rata (Mean)    : {mean_value}")
print(f"NumPy Array - Standar Deviasi     : {std_dev}")
print(f"NumPy Array - Median              : {median_value}")
print(f"NumPy Array - Kuartil 1 (Q1)      : {q1}")
print(f"NumPy Array - Kuartil 3 (Q3)      : {q3}")

"""List"""

import statistics

# Data dalam bentuk list (sesuai frekuensi)
data = [3, 3, 6, 6, 6, 7, 9, 9, 9, 9]

# Menghitung statistik
mean_value = statistics.mean(data)      # Rata-rata
std_dev = statistics.stdev(data)        # Standar deviasi sampel
median_value = statistics.median(data)  # Median
q1 = statistics.median(data[:len(data)//2])   # Kuartil 1 (Q1)
q3 = statistics.median(data[len(data)//2:])   # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"List - Rata-rata (Mean)    : {mean_value}")
print(f"List - Standar Deviasi     : {std_dev}")
print(f"List - Median              : {median_value}")
print(f"List - Kuartil 1 (Q1)      : {q1}")
print(f"List - Kuartil 3 (Q3)      : {q3}")

"""Dataframe Source Code"""

import pandas as pd

# Membuat DataFrame
df = pd.DataFrame({
    'Nilai': [3, 6, 7, 9],
    'Frekuensi': [2, 3, 1, 4]
})

# Memperluas data berdasarkan frekuensi
data_expanded = df.loc[df.index.repeat(df['Frekuensi'])]['Nilai']

# Menghitung statistik
mean_value = data_expanded.mean()      # Rata-rata
std_dev = data_expanded.std()          # Standar deviasi
median_value = data_expanded.median()  # Median
q1 = data_expanded.quantile(0.25)      # Kuartil 1 (Q1)
q3 = data_expanded.quantile(0.75)      # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"DataFrame - Rata-rata (Mean)    : {mean_value}")
print(f"DataFrame - Standar Deviasi     : {std_dev}")
print(f"DataFrame - Median              : {median_value}")
print(f"DataFrame - Kuartil 1 (Q1)      : {q1}")
print(f"DataFrame - Kuartil 3 (Q3)      : {q3}")

"""Dataframe File"""

import pandas as pd

# Buat DataFrame dengan data
df = pd.DataFrame({
    'Nilai': [3, 6, 7, 9],
    'Frekuensi': [2, 3, 1, 4]
})

# Simpan ke dalam file CSV
file_path = "/content/data_nilai.csv"
df.to_csv(file_path, index=False)

print(f"File telah disimpan di {file_path}")

# Baca data dari file CSV
df_baca = pd.read_csv("/content/data_nilai.csv")

# Perluas data berdasarkan frekuensi
data_expanded = df_baca.loc[df_baca.index.repeat(df_baca['Frekuensi'])]['Nilai']

# Menghitung statistik
mean_value = data_expanded.mean()      # Rata-rata
std_dev = data_expanded.std()          # Standar deviasi
median_value = data_expanded.median()  # Median
q1 = data_expanded.quantile(0.25)      # Kuartil 1 (Q1)
q3 = data_expanded.quantile(0.75)      # Kuartil 3 (Q3)

# Menampilkan hasil
print(f"Rata-rata (Mean)    : {mean_value}")
print(f"Standar Deviasi     : {std_dev}")
print(f"Median              : {median_value}")
print(f"Kuartil 1 (Q1)      : {q1}")
print(f"Kuartil 3 (Q3)      : {q3}")