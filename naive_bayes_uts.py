# -*- coding: utf-8 -*-
"""Naive Bayes UTS

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14KkeyY3BCn_yTX0ty3bD4etKT0awQIAU
"""

from google.colab import files

uploaded = files.upload()  # Ini akan membuka jendela unggahan file

import pandas as pd

# Dapatkan nama file yang diunggah (mengambil kunci dari dictionary `uploaded`)
file_name = list(uploaded.keys())[0]

# Membaca CSV ke dalam DataFrame
df = pd.read_csv(file_name, sep=';')

# Menampilkan beberapa baris pertama untuk memverifikasi data
print(df.head())

df2 = df.drop('id', axis=1)
print(df2.head())

from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

le = LabelEncoder()
for col in ['Outlook', 'Humidity', 'Windy', 'Class']:
    df2[col] = le.fit_transform(df[col])

# Mengonversi fitur biner windy menjadi 0/1
df2['Windy'] = df2['Windy'].astype(int)


# Definisikan X dan y
X = df2.drop('Class', axis=1)  # Fitur (semua kolom kecuali 'play')
y = df2['Class']  # Target ('play' column)

print("data X:\n", X,"\n")
print("data Y:\n",y, "\n")

# Bagi data menjadi training dan testing set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Inisialisasi model Naive Bayes (MultinomialNB)
model = MultinomialNB()

# Latih model menggunakan data training
print("X train :")
print(X_train, "\n")
print("y train :")
print(y_train,"\n")
model.fit(X_train, y_train)

# Lakukan prediksi pada data testing
print("X Test ")
print(X_test,"\n")
print(" y Test :")
print(y_test,"\n")
y_pred = model.predict(X_test)

# Evaluasi performa model
accuracy = accuracy_score(y_test, y_pred)
print(f"Akurasi: {accuracy}")

print(classification_report(y_test, y_pred))